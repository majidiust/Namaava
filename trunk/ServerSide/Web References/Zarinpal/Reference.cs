//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace Webinar.Zarinpal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServicesBinding", Namespace="urn:WebServices")]
    public partial class WebServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback PaymentRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaymentDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PaymentVerificationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServices() {
            this.Url = global::Webinar.Properties.Settings.Default.Webinar_Zarinpal_WebServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event PaymentRequestCompletedEventHandler PaymentRequestCompleted;
        
        /// <remarks/>
        public event PaymentDetailsCompletedEventHandler PaymentDetailsCompleted;
        
        /// <remarks/>
        public event PaymentVerificationCompletedEventHandler PaymentVerificationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServices#PaymentRequest", RequestNamespace="urn:WebServices", ResponseNamespace="urn:WebServices")]
        [return: System.Xml.Serialization.SoapElementAttribute("au")]
        public string PaymentRequest(string merchantID, int amount, string redirectUrl, string desc) {
            object[] results = this.Invoke("PaymentRequest", new object[] {
                        merchantID,
                        amount,
                        redirectUrl,
                        desc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PaymentRequestAsync(string merchantID, int amount, string redirectUrl, string desc) {
            this.PaymentRequestAsync(merchantID, amount, redirectUrl, desc, null);
        }
        
        /// <remarks/>
        public void PaymentRequestAsync(string merchantID, int amount, string redirectUrl, string desc, object userState) {
            if ((this.PaymentRequestOperationCompleted == null)) {
                this.PaymentRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentRequestOperationCompleted);
            }
            this.InvokeAsync("PaymentRequest", new object[] {
                        merchantID,
                        amount,
                        redirectUrl,
                        desc}, this.PaymentRequestOperationCompleted, userState);
        }
        
        private void OnPaymentRequestOperationCompleted(object arg) {
            if ((this.PaymentRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentRequestCompleted(this, new PaymentRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServices#PaymentDetails", RequestNamespace="urn:WebServices", ResponseNamespace="urn:WebServices")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public int PaymentDetails(string merchantID, string au, string customerEmail, string customerTel) {
            object[] results = this.Invoke("PaymentDetails", new object[] {
                        merchantID,
                        au,
                        customerEmail,
                        customerTel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PaymentDetailsAsync(string merchantID, string au, string customerEmail, string customerTel) {
            this.PaymentDetailsAsync(merchantID, au, customerEmail, customerTel, null);
        }
        
        /// <remarks/>
        public void PaymentDetailsAsync(string merchantID, string au, string customerEmail, string customerTel, object userState) {
            if ((this.PaymentDetailsOperationCompleted == null)) {
                this.PaymentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentDetailsOperationCompleted);
            }
            this.InvokeAsync("PaymentDetails", new object[] {
                        merchantID,
                        au,
                        customerEmail,
                        customerTel}, this.PaymentDetailsOperationCompleted, userState);
        }
        
        private void OnPaymentDetailsOperationCompleted(object arg) {
            if ((this.PaymentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentDetailsCompleted(this, new PaymentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:WebServices#PaymentVerification", RequestNamespace="urn:WebServices", ResponseNamespace="urn:WebServices")]
        [return: System.Xml.Serialization.SoapElementAttribute("status")]
        public int PaymentVerification(string merchantID, string au, int amount) {
            object[] results = this.Invoke("PaymentVerification", new object[] {
                        merchantID,
                        au,
                        amount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PaymentVerificationAsync(string merchantID, string au, int amount) {
            this.PaymentVerificationAsync(merchantID, au, amount, null);
        }
        
        /// <remarks/>
        public void PaymentVerificationAsync(string merchantID, string au, int amount, object userState) {
            if ((this.PaymentVerificationOperationCompleted == null)) {
                this.PaymentVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentVerificationOperationCompleted);
            }
            this.InvokeAsync("PaymentVerification", new object[] {
                        merchantID,
                        au,
                        amount}, this.PaymentVerificationOperationCompleted, userState);
        }
        
        private void OnPaymentVerificationOperationCompleted(object arg) {
            if ((this.PaymentVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentVerificationCompleted(this, new PaymentVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PaymentRequestCompletedEventHandler(object sender, PaymentRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaymentRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PaymentDetailsCompletedEventHandler(object sender, PaymentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaymentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PaymentVerificationCompletedEventHandler(object sender, PaymentVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PaymentVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591