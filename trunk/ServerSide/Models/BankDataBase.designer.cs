#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Webinar.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BankTransition")]
	public partial class BankDataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertBankInfo(BankInfo instance);
    partial void UpdateBankInfo(BankInfo instance);
    partial void DeleteBankInfo(BankInfo instance);
    partial void InsertBankResponse(BankResponse instance);
    partial void UpdateBankResponse(BankResponse instance);
    partial void DeleteBankResponse(BankResponse instance);
    #endregion
		
		public BankDataBaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BankTransitionConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BankDataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Application> Applications
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<BankInfo> BankInfos
		{
			get
			{
				return this.GetTable<BankInfo>();
			}
		}
		
		public System.Data.Linq.Table<BankResponse> BankResponses
		{
			get
			{
				return this.GetTable<BankResponse>();
			}
		}
		
		public System.Data.Linq.Table<PaymentInformation> PaymentInformations
		{
			get
			{
				return this.GetTable<PaymentInformation>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Application")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationCode;
		
		private string _ApplicationName;
		
		private string _ReturnUrl;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationCodeChanging(System.Guid value);
    partial void OnApplicationCodeChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnReturnUrlChanging(string value);
    partial void OnReturnUrlChanged();
    #endregion
		
		public Application()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50)")]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnUrl", DbType="NVarChar(50)")]
		public string ReturnUrl
		{
			get
			{
				return this._ReturnUrl;
			}
			set
			{
				if ((this._ReturnUrl != value))
				{
					this.OnReturnUrlChanging(value);
					this.SendPropertyChanging();
					this._ReturnUrl = value;
					this.SendPropertyChanged("ReturnUrl");
					this.OnReturnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Payment", Storage="_Payments", ThisKey="ApplicationCode", OtherKey="ApplicationCode")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _Amount;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _BankId;
		
		private string _TimeStamp;
		
		private string _DiscountCode;
		
		private System.Nullable<System.Guid> _ApplicationCode;
		
		private EntitySet<BankResponse> _BankResponses;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<BankInfo> _BankInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIdChanging(int value);
    partial void OnPaymentIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnBankIdChanging(System.Nullable<int> value);
    partial void OnBankIdChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    partial void OnDiscountCodeChanging(string value);
    partial void OnDiscountCodeChanged();
    partial void OnApplicationCodeChanging(System.Nullable<System.Guid> value);
    partial void OnApplicationCodeChanged();
    #endregion
		
		public Payment()
		{
			this._BankResponses = new EntitySet<BankResponse>(new Action<BankResponse>(this.attach_BankResponses), new Action<BankResponse>(this.detach_BankResponses));
			this._Application = default(EntityRef<Application>);
			this._BankInfo = default(EntityRef<BankInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NVarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", DbType="Int")]
		public System.Nullable<int> BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					if (this._BankInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NVarChar(20)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountCode", DbType="NVarChar(50)")]
		public string DiscountCode
		{
			get
			{
				return this._DiscountCode;
			}
			set
			{
				if ((this._DiscountCode != value))
				{
					this.OnDiscountCodeChanging(value);
					this.SendPropertyChanging();
					this._DiscountCode = value;
					this.SendPropertyChanged("DiscountCode");
					this.OnDiscountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCode", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApplicationCode
		{
			get
			{
				return this._ApplicationCode;
			}
			set
			{
				if ((this._ApplicationCode != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationCodeChanging(value);
					this.SendPropertyChanging();
					this._ApplicationCode = value;
					this.SendPropertyChanged("ApplicationCode");
					this.OnApplicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_BankResponse", Storage="_BankResponses", ThisKey="PaymentId", OtherKey="PaymentId")]
		public EntitySet<BankResponse> BankResponses
		{
			get
			{
				return this._BankResponses;
			}
			set
			{
				this._BankResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Payment", Storage="_Application", ThisKey="ApplicationCode", OtherKey="ApplicationCode", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._ApplicationCode = value.ApplicationCode;
					}
					else
					{
						this._ApplicationCode = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankInfo_Payment", Storage="_BankInfo", ThisKey="BankId", OtherKey="BankId", IsForeignKey=true)]
		public BankInfo BankInfo
		{
			get
			{
				return this._BankInfo.Entity;
			}
			set
			{
				BankInfo previousValue = this._BankInfo.Entity;
				if (((previousValue != value) 
							|| (this._BankInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BankInfo.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._BankInfo.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._BankId = value.BankId;
					}
					else
					{
						this._BankId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BankInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BankResponses(BankResponse entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_BankResponses(BankResponse entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankInfo")]
	public partial class BankInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankId;
		
		private string _BankName;
		
		private string _BankUrlPayment;
		
		private string _MerchantId;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankIdChanging(int value);
    partial void OnBankIdChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankUrlPaymentChanging(string value);
    partial void OnBankUrlPaymentChanged();
    partial void OnMerchantIdChanging(string value);
    partial void OnMerchantIdChanged();
    #endregion
		
		public BankInfo()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankId
		{
			get
			{
				return this._BankId;
			}
			set
			{
				if ((this._BankId != value))
				{
					this.OnBankIdChanging(value);
					this.SendPropertyChanging();
					this._BankId = value;
					this.SendPropertyChanged("BankId");
					this.OnBankIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankUrlPayment", DbType="NVarChar(MAX)")]
		public string BankUrlPayment
		{
			get
			{
				return this._BankUrlPayment;
			}
			set
			{
				if ((this._BankUrlPayment != value))
				{
					this.OnBankUrlPaymentChanging(value);
					this.SendPropertyChanging();
					this._BankUrlPayment = value;
					this.SendPropertyChanged("BankUrlPayment");
					this.OnBankUrlPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantId", DbType="NVarChar(50)")]
		public string MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BankInfo_Payment", Storage="_Payments", ThisKey="BankId", OtherKey="BankId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.BankInfo = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.BankInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankResponse")]
	public partial class BankResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TransId;
		
		private System.Nullable<int> _ResponseCode;
		
		private System.Nullable<int> _ResponseSubCode;
		
		private System.Nullable<int> _ResponseReasonCode;
		
		private string _ResponseReasonText;
		
		private string _MerchantId;
		
		private string _FpSequence;
		
		private string _TimeStamp;
		
		private string _Amount;
		
		private string _CurrencyCode;
		
		private string _SignatureHash;
		
		private int _BankResponseId;
		
		private System.Nullable<int> _PaymentId;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransIdChanging(string value);
    partial void OnTransIdChanged();
    partial void OnResponseCodeChanging(System.Nullable<int> value);
    partial void OnResponseCodeChanged();
    partial void OnResponseSubCodeChanging(System.Nullable<int> value);
    partial void OnResponseSubCodeChanged();
    partial void OnResponseReasonCodeChanging(System.Nullable<int> value);
    partial void OnResponseReasonCodeChanged();
    partial void OnResponseReasonTextChanging(string value);
    partial void OnResponseReasonTextChanged();
    partial void OnMerchantIdChanging(string value);
    partial void OnMerchantIdChanged();
    partial void OnFpSequenceChanging(string value);
    partial void OnFpSequenceChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    partial void OnAmountChanging(string value);
    partial void OnAmountChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnSignatureHashChanging(string value);
    partial void OnSignatureHashChanged();
    partial void OnBankResponseIdChanging(int value);
    partial void OnBankResponseIdChanged();
    partial void OnPaymentIdChanging(System.Nullable<int> value);
    partial void OnPaymentIdChanged();
    #endregion
		
		public BankResponse()
		{
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransId", DbType="NVarChar(50)")]
		public string TransId
		{
			get
			{
				return this._TransId;
			}
			set
			{
				if ((this._TransId != value))
				{
					this.OnTransIdChanging(value);
					this.SendPropertyChanging();
					this._TransId = value;
					this.SendPropertyChanged("TransId");
					this.OnTransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="Int")]
		public System.Nullable<int> ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this.OnResponseCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseCode = value;
					this.SendPropertyChanged("ResponseCode");
					this.OnResponseCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseSubCode", DbType="Int")]
		public System.Nullable<int> ResponseSubCode
		{
			get
			{
				return this._ResponseSubCode;
			}
			set
			{
				if ((this._ResponseSubCode != value))
				{
					this.OnResponseSubCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseSubCode = value;
					this.SendPropertyChanged("ResponseSubCode");
					this.OnResponseSubCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseReasonCode", DbType="Int")]
		public System.Nullable<int> ResponseReasonCode
		{
			get
			{
				return this._ResponseReasonCode;
			}
			set
			{
				if ((this._ResponseReasonCode != value))
				{
					this.OnResponseReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._ResponseReasonCode = value;
					this.SendPropertyChanged("ResponseReasonCode");
					this.OnResponseReasonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseReasonText", DbType="NVarChar(MAX)")]
		public string ResponseReasonText
		{
			get
			{
				return this._ResponseReasonText;
			}
			set
			{
				if ((this._ResponseReasonText != value))
				{
					this.OnResponseReasonTextChanging(value);
					this.SendPropertyChanging();
					this._ResponseReasonText = value;
					this.SendPropertyChanged("ResponseReasonText");
					this.OnResponseReasonTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantId", DbType="NVarChar(50)")]
		public string MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FpSequence", DbType="NVarChar(50)")]
		public string FpSequence
		{
			get
			{
				return this._FpSequence;
			}
			set
			{
				if ((this._FpSequence != value))
				{
					this.OnFpSequenceChanging(value);
					this.SendPropertyChanging();
					this._FpSequence = value;
					this.SendPropertyChanged("FpSequence");
					this.OnFpSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NVarChar(20)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NVarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NVarChar(50)")]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignatureHash", DbType="NVarChar(50)")]
		public string SignatureHash
		{
			get
			{
				return this._SignatureHash;
			}
			set
			{
				if ((this._SignatureHash != value))
				{
					this.OnSignatureHashChanging(value);
					this.SendPropertyChanging();
					this._SignatureHash = value;
					this.SendPropertyChanged("SignatureHash");
					this.OnSignatureHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankResponseId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankResponseId
		{
			get
			{
				return this._BankResponseId;
			}
			set
			{
				if ((this._BankResponseId != value))
				{
					this.OnBankResponseIdChanging(value);
					this.SendPropertyChanging();
					this._BankResponseId = value;
					this.SendPropertyChanged("BankResponseId");
					this.OnBankResponseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="Int")]
		public System.Nullable<int> PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_BankResponse", Storage="_Payment", ThisKey="PaymentId", OtherKey="PaymentId", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.BankResponses.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.BankResponses.Add(this);
						this._PaymentId = value.PaymentId;
					}
					else
					{
						this._PaymentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentInformation")]
	public partial class PaymentInformation
	{
		
		private int _PaymentId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _Amount;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _ResponseCode;
		
		private string _TransId;
		
		public PaymentInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="Int NOT NULL")]
		public int PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this._PaymentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="NVarChar(50)")]
		public string Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponseCode", DbType="Int")]
		public System.Nullable<int> ResponseCode
		{
			get
			{
				return this._ResponseCode;
			}
			set
			{
				if ((this._ResponseCode != value))
				{
					this._ResponseCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransId", DbType="NVarChar(50)")]
		public string TransId
		{
			get
			{
				return this._TransId;
			}
			set
			{
				if ((this._TransId != value))
				{
					this._TransId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
